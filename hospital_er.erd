// ER Model
erdiagram Hospital

// Options
notation=default

// Entities
entity Doctor {
    doctor_id: INT key
    doctor_name: VARCHAR(255)
    gender: CHAR(5)
    age: INT
    phone: VARCHAR(20)
    office: VARCHAR(20)
    salary: DECIMAL(10,2)
}

entity Department{
    dept_name: VARCHAR(255) key
    building: VARCHAR(255)
    budget: DECIMAL(10,2)
}

entity Doctor_Department {
    doctor_id: INT key
    dept_name: VARCHAR(255) key
}

entity Patient {
    patient_id: INT key
    patient_name: VARCHAR(255)
    gender: CHAR(5)
    age: INT
    weight: DECIMAL(10,2)
    city: VARCHAR(255)
}

weak entity Inpatient{
    patient_id: INT key
    room_no: INT partial-key
    date_of_adm: DATE
    date_of_dis: DATE
}

entity Outpatient {
    patient_id: INT key
    date: DATE
}
entity Room {
    room_no: INT key
    room_type: VARCHAR(255)
    status: VARCHAR(255)
}
entity Prescription {
    prescription_id: INT key
    disease_id: INT
    symptom_id: INT
    lab_type: VARCHAR(255)
    medicine_qty: INT

}
entity Bill {
    bill_no: INT key
    patient_id: INT
    service_charge: DECIMAL(10,2)
    no_of_days: INT
    due_date: DATE
}

weak entity Nurse{
 nurse_id: INT partial-key
 nurse_name: VARCHAR(255)
}


// Relationships


// One-to-one relationship between Inpatient and Room:
relationship Inpatient_Is_In_Room {
  Inpatient[1] -> Room[1]
}

// One-to-one relationship between Prescription and Bill:
relationship Bill_On_Prescription {
  Prescription[1] -> Bill[1]
}

// One-to-many relationship between Department and Doctor_Department:
relationship Department_Has_Doctors {
  Department[1] -> Doctor_Department[N]
}

// One-to-many relationship between Doctor and Doctor_Department:
relationship Doctor_Belongs_to_Department {
  Doctor[1] -> Doctor_Department[N]
}

// One-to-many relationship between Patient and Inpatient:
relationship Admitted {
  Patient[1] -> Inpatient[N]
}

// One-to-one relationship between Patient and Outpatient:
relationship Visits {
  Patient[1] -> Outpatient[0..1]
}


// One-to-many relationship between Prescription and Patient:
relationship Patient_Prescription {
  Prescription[1] -> Patient[N]
}

// One-to-many relationship between Bill and Patient:
relationship Charged {
  Bill[1] -> Patient[N]
}



// one-to-one relatioinship between Doctor and Department 
relationship Work {
Doctor[1] -> Department[1]
}

// one-to-one relatioinship between Nurse and Patient 
weak relationship Assists {
Nurse[N] -> Patient[1]
}


// Many-many relationship between Doctor and Patient 
relationship Consultation {
Doctor[N] -> Patient[N]
}


